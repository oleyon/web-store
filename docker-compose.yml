version: '3'

services:
  ui:
    build:
      context: ./UI
      dockerfile: Dockerfile
    ports:
      - "3000:80"  # Map container port 80 to host port 3000 for React frontend
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    networks:
      - default

  api:
    build:
      context: ./API
      dockerfile: Dockerfile
    # env_file:
    #   - .env
    ports:
      - "5000:80"  # Map container port 3000 to host port 5000 for API backend
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: redis
      POSTGRES_HOST: db
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_PASS: ${ADMIN_PASS}
    volumes:
      - static_data:/app/wwwroot
    depends_on:
      - redis
      - db  # Ensure API starts after the database service
    networks:
      - default

  db:
    image: postgres:latest
    # env_file:
    #   - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "25432:5432"  # Map container port 5432 to host port 5432 for PostgreSQL
    volumes:
      - db_data:/var/lib/postgresql/data  # Mount named volume for database data storage
    networks:
      - default

  redis:
      image: redis:latest
      command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
      ports:
        - "6379:6379"  # Map container port 6379 to host port 6379 for Redis
      networks:
        - default

volumes:
  db_data:  # Define named volume for PostgreSQL data
  static_data:

networks:
  default:
    driver: bridge